<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: reports.proto

namespace Mdg;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A sequence of traces and stats. An individual operation should either be described as a trace
 * or as part of stats, but not both.
 *
 * Generated from protobuf message <code>mdg.engine.proto.TracesAndStats</code>
 */
class TracesAndStats extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace trace = 1;</code>
     */
    private $trace;
    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.ContextualizedStats stats_with_context = 2;</code>
     */
    private $stats_with_context;
    /**
     * This describes the fields referenced in the operation. Note that this may
     * include fields that don't show up in FieldStats (due to being interface fields,
     * being nested under null fields or empty lists or non-matching fragments or
     * `&#64;include` or `&#64;skip`, etc). It also may be missing fields that show up in FieldStats
     * (as FieldStats will include the concrete object type for fields referenced
     * via an interface type).
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.ReferencedFieldsForType> referenced_fields_by_type = 4;</code>
     */
    private $referenced_fields_by_type;
    /**
     * This field is used to validate that the algorithm used to construct `stats_with_context`
     * matches similar algorithms in Apollo's servers. It is otherwise ignored and should not
     * be included in reports.
     *
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace internal_traces_contributing_to_stats = 3;</code>
     */
    private $internal_traces_contributing_to_stats;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Mdg\Trace[]|\Google\Protobuf\Internal\RepeatedField $trace
     *     @type \Mdg\ContextualizedStats[]|\Google\Protobuf\Internal\RepeatedField $stats_with_context
     *     @type array|\Google\Protobuf\Internal\MapField $referenced_fields_by_type
     *           This describes the fields referenced in the operation. Note that this may
     *           include fields that don't show up in FieldStats (due to being interface fields,
     *           being nested under null fields or empty lists or non-matching fragments or
     *           `&#64;include` or `&#64;skip`, etc). It also may be missing fields that show up in FieldStats
     *           (as FieldStats will include the concrete object type for fields referenced
     *           via an interface type).
     *     @type \Mdg\Trace[]|\Google\Protobuf\Internal\RepeatedField $internal_traces_contributing_to_stats
     *           This field is used to validate that the algorithm used to construct `stats_with_context`
     *           matches similar algorithms in Apollo's servers. It is otherwise ignored and should not
     *           be included in reports.
     * }
     */
    public function __construct($data = NULL) {
        \Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace trace = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTrace()
    {
        return $this->trace;
    }

    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace trace = 1;</code>
     * @param \Mdg\Trace[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTrace($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\Trace::class);
        $this->trace = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.ContextualizedStats stats_with_context = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStatsWithContext()
    {
        return $this->stats_with_context;
    }

    /**
     * Generated from protobuf field <code>repeated .mdg.engine.proto.ContextualizedStats stats_with_context = 2;</code>
     * @param \Mdg\ContextualizedStats[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStatsWithContext($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\ContextualizedStats::class);
        $this->stats_with_context = $arr;

        return $this;
    }

    /**
     * This describes the fields referenced in the operation. Note that this may
     * include fields that don't show up in FieldStats (due to being interface fields,
     * being nested under null fields or empty lists or non-matching fragments or
     * `&#64;include` or `&#64;skip`, etc). It also may be missing fields that show up in FieldStats
     * (as FieldStats will include the concrete object type for fields referenced
     * via an interface type).
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.ReferencedFieldsForType> referenced_fields_by_type = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getReferencedFieldsByType()
    {
        return $this->referenced_fields_by_type;
    }

    /**
     * This describes the fields referenced in the operation. Note that this may
     * include fields that don't show up in FieldStats (due to being interface fields,
     * being nested under null fields or empty lists or non-matching fragments or
     * `&#64;include` or `&#64;skip`, etc). It also may be missing fields that show up in FieldStats
     * (as FieldStats will include the concrete object type for fields referenced
     * via an interface type).
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.ReferencedFieldsForType> referenced_fields_by_type = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setReferencedFieldsByType($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\ReferencedFieldsForType::class);
        $this->referenced_fields_by_type = $arr;

        return $this;
    }

    /**
     * This field is used to validate that the algorithm used to construct `stats_with_context`
     * matches similar algorithms in Apollo's servers. It is otherwise ignored and should not
     * be included in reports.
     *
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace internal_traces_contributing_to_stats = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInternalTracesContributingToStats()
    {
        return $this->internal_traces_contributing_to_stats;
    }

    /**
     * This field is used to validate that the algorithm used to construct `stats_with_context`
     * matches similar algorithms in Apollo's servers. It is otherwise ignored and should not
     * be included in reports.
     *
     * Generated from protobuf field <code>repeated .mdg.engine.proto.Trace internal_traces_contributing_to_stats = 3;</code>
     * @param \Mdg\Trace[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInternalTracesContributingToStats($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\Trace::class);
        $this->internal_traces_contributing_to_stats = $arr;

        return $this;
    }

}

