<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: reports.proto

namespace Mdg\Trace;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>mdg.engine.proto.Trace.HTTP</code>
 */
class HTTP extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.mdg.engine.proto.Trace.HTTP.Method method = 1;</code>
     */
    protected $method = 0;
    /**
     * Generated from protobuf field <code>string host = 2;</code>
     */
    protected $host = '';
    /**
     * Generated from protobuf field <code>string path = 3;</code>
     */
    protected $path = '';
    /**
     * Should exclude manual blacklist ("Auth" by default)
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> request_headers = 4;</code>
     */
    private $request_headers;
    /**
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> response_headers = 5;</code>
     */
    private $response_headers;
    /**
     * Generated from protobuf field <code>uint32 status_code = 6;</code>
     */
    protected $status_code = 0;
    /**
     * TLS was used
     *
     * Generated from protobuf field <code>bool secure = 8;</code>
     */
    protected $secure = false;
    /**
     * by convention "HTTP/1.0", "HTTP/1.1", "HTTP/2" or "h2"
     *
     * Generated from protobuf field <code>string protocol = 9;</code>
     */
    protected $protocol = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $method
     *     @type string $host
     *     @type string $path
     *     @type array|\Google\Protobuf\Internal\MapField $request_headers
     *           Should exclude manual blacklist ("Auth" by default)
     *     @type array|\Google\Protobuf\Internal\MapField $response_headers
     *     @type int $status_code
     *     @type bool $secure
     *           TLS was used
     *     @type string $protocol
     *           by convention "HTTP/1.0", "HTTP/1.1", "HTTP/2" or "h2"
     * }
     */
    public function __construct($data = NULL) {
        \Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.mdg.engine.proto.Trace.HTTP.Method method = 1;</code>
     * @return int
     */
    public function getMethod()
    {
        return $this->method;
    }

    /**
     * Generated from protobuf field <code>.mdg.engine.proto.Trace.HTTP.Method method = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMethod($var)
    {
        GPBUtil::checkEnum($var, \Mdg\Trace\HTTP\Method::class);
        $this->method = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string host = 2;</code>
     * @return string
     */
    public function getHost()
    {
        return $this->host;
    }

    /**
     * Generated from protobuf field <code>string host = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setHost($var)
    {
        GPBUtil::checkString($var, True);
        $this->host = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string path = 3;</code>
     * @return string
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Generated from protobuf field <code>string path = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->path = $var;

        return $this;
    }

    /**
     * Should exclude manual blacklist ("Auth" by default)
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> request_headers = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getRequestHeaders()
    {
        return $this->request_headers;
    }

    /**
     * Should exclude manual blacklist ("Auth" by default)
     *
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> request_headers = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setRequestHeaders($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\Trace\HTTP\Values::class);
        $this->request_headers = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> response_headers = 5;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getResponseHeaders()
    {
        return $this->response_headers;
    }

    /**
     * Generated from protobuf field <code>map<string, .mdg.engine.proto.Trace.HTTP.Values> response_headers = 5;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setResponseHeaders($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Mdg\Trace\HTTP\Values::class);
        $this->response_headers = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 status_code = 6;</code>
     * @return int
     */
    public function getStatusCode()
    {
        return $this->status_code;
    }

    /**
     * Generated from protobuf field <code>uint32 status_code = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setStatusCode($var)
    {
        GPBUtil::checkUint32($var);
        $this->status_code = $var;

        return $this;
    }

    /**
     * TLS was used
     *
     * Generated from protobuf field <code>bool secure = 8;</code>
     * @return bool
     */
    public function getSecure()
    {
        return $this->secure;
    }

    /**
     * TLS was used
     *
     * Generated from protobuf field <code>bool secure = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setSecure($var)
    {
        GPBUtil::checkBool($var);
        $this->secure = $var;

        return $this;
    }

    /**
     * by convention "HTTP/1.0", "HTTP/1.1", "HTTP/2" or "h2"
     *
     * Generated from protobuf field <code>string protocol = 9;</code>
     * @return string
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * by convention "HTTP/1.0", "HTTP/1.1", "HTTP/2" or "h2"
     *
     * Generated from protobuf field <code>string protocol = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setProtocol($var)
    {
        GPBUtil::checkString($var, True);
        $this->protocol = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(HTTP::class, \Mdg\Trace_HTTP::class);

